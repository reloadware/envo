import envo  # noqa: F401
from pathlib import Path

root = Path(__file__).parent.absolute()
envo.add_source_roots([root])

import os  # noqa: F401
from typing import List, Dict, Any, Optional, Tuple  # noqa: F401
from dataclasses import dataclass  # noqa: F401


from envo import (  # noqa: F401
    logger,
    command,
    context,
    run,
    precmd,
    onstdout,
    onstderr,
    postcmd,
    onload,
    oncreate,
    onunload,
    ondestroy,
    boot_code,
    on_partial_reload,
    Plugin,
    VirtualEnv,
    Env,
    Namespace,
    Source,
    console,
    var,
    computed_var,
    VarGroup,
    import_from_file
)

# Declare your command namespaces here
# like this:
# my_namespace = Namespace("my_namespace")
{{ parent_import }}

class {{ class_name }}({{ base_class }}):  # type: ignore
    class Meta({{ base_class }}.Meta):  # type: ignore
        root: Path = root
        stage: str = "{{ stage }}"
        emoji: str = "{{ emoji }}"
        sources: List[Source] = []
        name: str = "{{ name }}"
        version: str = "0.1.0"
        watch_files: List[str] = []
        ignore_files: List[str] = []
        verbose_run: bool = False

    class Environ({{ base_class }}.Environ):
        # Declare your variables here
        ...

    e: Environ

    def init(self) -> None:
        super().init()
        # Define your variables here

    # Define your commands, hooks and properties here


{{ this_env }} = {{ class_name }}

